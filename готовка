recipes = {
    "Омлет": {"ингредиенты": {"яйца", "молоко", "соль"}, "метод": "жарка", "сложность": "простое"},
    "Салат": {"ингредиенты": {"помидоры", "огурцы", "масло"}, "метод": "нарезка", "сложность": "простое"},
    "Суп": {"ингредиенты": {"картофель", "морковь", "лук", "вода"}, "метод": "варка", "сложность": "среднее"},
    "Пицца": {"ингредиенты": {"мука", "сыр", "томатный соус", "дрожжи"}, "метод": "запекание", "сложность": "сложное"},
    "Каша": {"ингредиенты": {"овсянка", "молоко", "сахар"}, "метод": "варка", "сложность": "простое"},
    "Печенье": {"ингредиенты": {"мука", "сахар", "яйца", "масло"}, "метод": "запекание", "сложность": "среднее"},
    "Жареная рыба": {"ингредиенты": {"рыба", "масло", "лимон"}, "метод": "жарка", "сложность": "среднее"},
    "Тушеное мясо": {"ингредиенты": {"мясо", "лук", "морковь", "специи"}, "метод": "тушение", "сложность": "сложное"},
    "Чизкейк": {"ингредиенты": {"печенье", "сливочный сыр", "сахар", "яйца"}, "метод": "запекание", "сложность": "сложное"},
    "Котлеты": {"ингредиенты": {"фарш", "лук", "яйцо", "соль"}, "метод": "жарка", "сложность": "среднее"},
    "Блины": {"ингредиенты": {"мука", "молоко", "яйца", "сахар"}, "метод": "жарка", "сложность": "среднее"},
    "Гречка с мясом": {"ингредиенты": {"гречка", "мясо", "лук", "масло"}, "метод": "варка", "сложность": "среднее"},
    "Фруктовый салат": {"ингредиенты": {"яблоко", "банан", "апельсин", "мёд"}, "метод": "нарезка", "сложность": "простое"},
    "Сэндвич": {"ингредиенты": {"хлеб", "сыр", "колбаса"}, "метод": "сборка", "сложность": "простое"},
    "Спагетти карбонара": {"ингредиенты": {"спагетти", "бекон", "яйцо", "сыр"}, "метод": "варка", "сложность": "сложное"}
}

def choose_recipe(ingredients):
    available_dishes = {
        dish: data for dish, data in recipes.items() if data["ингредиенты"].issubset(ingredients)
    }
    return available_dishes

def cook(dish, method, difficulty, user_name):
    result = f"\nМетод готовки {dish}: {method}... (Сложность: {difficulty})\n"
    score = 10
    result += f"Шаги приготовления:\n"

    step = 0
    while step < 5:
        step += 1
        action = input(f"Шаг {step}: Ну, что дальше? (помешивать/подождать/добавить специи/ничего): ").strip().lower()
        result += f"Шаг {step}: {action}\n"

        if action == "подождать" and method in ["жарка", "запекание"]:
            result += "Блюдо подгорело. Позорище.\n"
            score -= 5
        elif action == "добавить специи": 
            result += "Блюдо стало ароматнее.\n"
            score += 2
        elif action == "ничего":
            result += "Ну, давай, собирайся с мыслями, помедитируй. Мы никуда не торопимся.\n"
            score -= 2

    result += f"\n{dish} готово, Итоговая оценка: {score}/10\n"
    
    if score >= 9:
        result += "Молодец, тебе удалось не вызвать у меня желание выстрелить себе в висок. Будешь моим су-шефом.\n"
    elif score >= 7:
        result += "Хорошо. Хотя, можно было и лучше.\n"
    elif score >= 5:
        result += "Ничтожная посредственность. А ведь у тебя были все шансы не разочаровать меня.\n"
    else:
        result += "Просто отвратительно. Попробуй снова или убирайся из моей кухни.\n"
    
    with open(f"{user_name}_results.txt", "w", encoding="utf-8") as file:
        file.write(result)

    return score

user_name = input("Назови свое имя.")
print(f"\nИтак, {user_name}, у тебя есть шанс проявить себя на моей кухне. Вероятность того, что ты не вылетишь отсюда как сопли в платочек, опозорив кулинарное ремесло, ничтожна, но давай посмотрим, что ты можешь.\n")

all_ingredients = set()
for recipe in recipes.values():
    all_ingredients.update(recipe["ингредиенты"])

while True: 
    print("\nДоступные ингредиенты:")
    print(", ".join(sorted(all_ingredients)))  

    print("\nВведи доступные ингредиенты через запятую или 'выход' для завершения:")
    user_input = input().strip()
    
    if user_input.lower() == "выход":
        print("\nМолодец, что не обманываешь себя. Приятного аппетита.")
        break
    
    user_ingredients = set(user_input.split(", "))

    available_dishes = choose_recipe(user_ingredients)

    if not available_dishes:
        print("\nУ тебя нет нужных ингредиентов. Попробуй снова или введите 'выход'.")
        continue

    print("\nТы можешь приготовить:")
    for dish, data in available_dishes.items():
        print(f"- {dish} (метод: {data['метод']}, сложность: {data['сложность']})")

    chosen_dish = input("\nВведи название блюда для приготовления или 'выход' для завершения: ").strip()
    
    if chosen_dish.lower() == "выход":
        print("\nМолодец, что не обманываешь себя. Приятного аппетита.")
        break

    if chosen_dish in available_dishes:
        data = available_dishes[chosen_dish]
        cook(chosen_dish, data["метод"], data["сложность"], user_name)
    else:
        print("\nТы выбрал не то блюдо, попробуй снова.")
